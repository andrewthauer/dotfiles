# see https://jj-vcs.github.io/jj/latest/config/ "$schema" = "https://jj-vcs.github.io/jj/latest/config-schema.json"

[user]
name = "Andrew Thauer"
email = "6507159+andrewthauer@users.noreply.github.com"

# [core]
# fsmonitor = "watchman"

# [core.watchman]
# register-snapshot-trigger = true

[ui]
default-command = "log"
# graph.style = "ascii"

[git]
push-new-bookmarks = true
private-commits = "description(glob:'wip:*') | description(glob:'private:*')"
write-change-id-header = true

# Configured in ~/.config/jj/conf.d/local.toml
# [git]
# sign-on-push = true
# [signing]
# backend = "ssh"
# key = "<public key>
# backends.ssh.program = "/Applications/1Password.app/Contents/MacOS/op-ssh-sign"

#
# revset-aliases
#

[revset-aliases]
# branch name helpers
integration = 'description("[integration]") | description("[integration merge]")'
wip = 'description(regex:"^\\[(wip|WIP|todo|TODO)\\]|(wip|WIP|todo|TODO):?")'
testing = '(description(regex:"^testing:"))'

# bookmark helpers
all_bookmarks = 'all:(bookmarks() ~ immutable())'
'closest_bookmark(to)' = 'heads(::to & bookmarks())'

# misc
'recent()' = 'committer_date(after:"3 months ago")'
'direct_descendants(x)' = 'descendants(x, 2) ~ (x | main)'

#
# aliases
#

[aliases]
fetch = ["git", "fetch"]
lazy = ["util", "exec", "--", "lazyjj"]
logc = ["log", "-T", "builtin_log_compact"]
logd = ["log", "-T", "builtin_log_detailed"]
logr = ["log", "-r", "recent()"]
pr = ["util", "exec", "--", "jj-pr"]
push = ["git", "push"]
sync = ["rebase", "--source", "all:roots(trunk()..@)", "--destination", "trunk()"]
tug = ["bookmark", "move", "--from", "closest_bookmark(@-)", "--to", "@-"]
tugc = ["bookmark", "move", "--from", "closest_bookmark(@-)", "--to", "@"]
ui = ["util", "exec", "--", "jjui"]

#
# template-aliases
#

[template-aliases]
'format_short_signature(signature)' = 'signature.email().local()'
'format_timestamp(timestamp)' = 'timestamp.ago()'
'commit_timestamp(commit)' = 'commit.author().timestamp()'
log_oneline = '''
  if(root,
    format_root_commit(self),
    label(if(current_working_copy, "working_copy"),
      concat(
        separate(" ",
          format_short_change_id_with_hidden_and_divergent_info(self),
          if(empty, label("empty", "(empty)")),
          if(description,
            description.first_line(),
            label(if(empty, "empty"), description_placeholder),
          ),
          author.email().local(),
          bookmarks,
          tags,
          working_copies,
          if(git_head, label("git_head", "HEAD")),
          if(conflict, label("conflict", "conflict")),
          if(config("ui.show-cryptographic-signatures").as_boolean(),
            format_short_cryptographic_signature(signature)),
        ) ++ "\n",
      ),
    )
  )
'''
