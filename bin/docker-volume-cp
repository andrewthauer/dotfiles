#!/usr/bin/env bash
# Summary:
#   Copies files to and from docker volumes
#
# Usage:
#   docker-volume-cp [source] [dest]
#
# Examples:
#   docker-volume-cp volume_name:. host_dir
#   docker-volume-cp host_dir/. volume_name:.

set -e

SOURCE=$1
DEST=$2

SOURCE_ARR=("${SOURCE//:/ }")
DEST_ARR=("${DEST//:/ }")

usage() {
  cmd=$(basename "$0")
  echo "Usage:"
  echo "  volume -> host: $cmd volume_name:path /path/on/host"
  echo "  host -> volume: $cmd /path/on/host volume_name:path"
}

volume_to_local() {
  volume=${SOURCE_ARR[0]}
  volume_path=${SOURCE_ARR[1]}
  host_path=${DEST_ARR[0]}

  docker container create --name docker_volume_cp -v "$volume":/volume alpine
  cmd="docker cp docker_volume_cp:/volume/$volume_path $host_path"
  # echo "$cmd"
  $cmd
  docker rm docker_volume_cp
}

local_to_volume() {
  volume=${DEST_ARR[0]}
  volume_path=${DEST_ARR[1]}
  host_path=${SOURCE_ARR[0]}

  docker container create --name docker_volume_cp -v "$volume":/volume alpine
  cmd="docker cp $host_path docker_volume_cp:/volume/$volume_path"
  # echo "$cmd"
  $cmd
  docker rm docker_volume_cp
}

main() {
  if [ ${#SOURCE_ARR[@]} -eq 2 ] && [ ${#DEST_ARR[@]} -eq 1 ]; then
    volume_to_local
  elif [ ${#SOURCE_ARR[@]} -eq 1 ] && [ ${#DEST_ARR[@]} -eq 2 ]; then
    local_to_volume
  else
    usage
  fi
}

main "$@"
