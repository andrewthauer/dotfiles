#!/usr/bin/env bash

set -e

usage() {
  echo "SUMMARY:"
  echo "  Manage system packages"
  echo ""
  echo "USAGE: os-info [command]"
  echo ""
  echo "COMMANDS:"
  echo "  family       Get the OS family"
  echo "  arch         Get the OS architecture"
  echo "  help         Prints this message"
  echo ""
  echo "FLAGS:"
  echo "  --help, -h   Prints help"
}

get_arch() {
  uname -m
}

os_family() {
  # ideally we would use an associative array here
  # but this needs to work in bash < v4 for macos
  os_info=(
    "/etc/auto_master::macos"
    "/etc/debian_version::debian"
    "/etc/fedora-release::fedora"
    "/etc/redhat-release::rhel"
    "/etc/arch-release::arch"
    "/etc/alpine-release::alpine"
  )

  for kv in "${os_info[@]}"; do
    key="${kv%%::*}"
    val="${kv##*::}"
    [ -f "$key" ] && os_family="${val}"
  done

  echo "${os_family}"
}

package_manager() {
  local os_family
  os_family=$(os_family)

  if [ -n "$DOTFILES_PACKAGE_MANAGER" ]; then
    echo "$DOTFILES_PACKAGE_MANAGER"
  else
    case ${os_family} in
      "macos") echo "brew" ;;
      "debian") echo "apt" ;;
      "fedora") echo "dnf" ;;
      "rhel") echo "yum" ;;
      "arch") echo "pacman" ;;
      *) ;;
    esac
  fi
}

main() {
  cmd="$1"
  [ -n "$cmd" ] && shift

  case "$cmd" in
    family | type | t | --family | --type)
      os_family
      ;;
    arch | a | --arch | -a)
      get_arch "$@"
      ;;
    package-manager | p | --package-manager | -p)
      package_manager
      ;;
    help | --help | -h)
      usage
      ;;
    *)
      echo "os-family: $(os_family)"
      echo "arch: $(get_arch)"
      echo "package-manager: $(package_manager)"
      ;;
  esac
}

main "$@"
