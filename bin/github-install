#!/usr/bin/env bash
#
# description:
#   Installs or updates a github repo
#
# usage:
#   github-install acme/package
#   github-install acme/package --post-install 'make'
#

set -e

usage() {
  echo "Usage: $(basename $0) [repo] --post-install [command]"
  echo "";
  echo "  -r | --repo            : The github repo in the format of user/repo";
  echo "  -x | --post-install    : An optional post install command";
  echo "  -h | --help            : This message";
}

parse_args() {
  # positional args
  args=()

  # named args
  while [ "$1" != "" ]; do
  case "$1" in
    -r|--repo)          repo="$2";          shift;;
    -x|--post-install)  post_install="$2";  shift;;
    -h|--help)          usage;              exit;; # quit and show usage
    *)                  args+=("$1")        # if no match, add it to the positional args
  esac
  shift # move to next kv pair
  done

  # restore positional args
  set -- "${args[@]}"

  # set positionals to vars
  if [[ -z "${repo}" ]]; then
    repo="${args[0]}";
  fi

  # validate required args
  if [[ -z "${repo}" ]]; then
    echo "Invalid arguments"
    usage
    exit;
  fi
}

run() {
  parse_args "$@"

  IFS='/'; arr=($repo); unset IFS;
  user="${arr[0]}"
  proj="${arr[1]}"

  target_base_dir="${DOTFILES_REPOS_DIR}"
  target_dir="${target_base_dir}/${repo}"

  if [ ! -d "${target_dir}" ]; then
    echo "Installing ${repo} ..."
    mkdir -p "${target_dir}"
    git clone "https://github.com/${repo}" "${target_dir}"
  else
    echo "Updating ${repo} ..."
    git -C ${target_dir} pull
  fi

  if [ -n "${post_install}" ]; then
    echo "Running post install ..."
    pushd ${target_dir} >/dev/null
    ${post_install}
    popd >/dev/null
  fi
}

run $@;
