#!/usr/bin/env bash
#
# description:
#   This function can be used to merge various ssh configurations files together into `~.ssh/config`
#   (since ssh does not have an include file feature). This can be useful to separate personal and
#   work ssh configurations.
#
# setup:
#   # Define shell variable
#   SSH_CONFIGS=(
#     "$DOTFILES_DIR/secrets/ssh/config.base"
#     "$DOTFILES_DIR/secrets/ssh/config.personal"
#     "$DOTFILES_DIR/secrets/ssh/config.work"
#   )
#
# usage: ssh-config-merge
#   -> # ~/.ssh/config
#

set -e

# The source files
SRC_PATHS="$1"
[ -z "$SRC_PATHS" ] && SRC_PATHS="$SSH_CONFIGS"

# The target file
TARGET="$2"
[ -z "$TARGET" ] && TARGET="$HOME/.ssh/config"

# Truncate the file
if [ -e "$HOME/.ssh/config" ]; then
  echo "Do you want to replace the existing '$TARGET' file [y/N]?"
  read reply
  if [[ $reply =~ ^[Yy]$ ]]; then
    cat /dev/null > $TARGET
  else
    return 1
  fi
fi

# Convert the source paths into an array
IFS=':' read -r -a SSH_CONFIGS <<< "$SRC_PATHS"

# Append configs to the ~/.ssh/config
for conf in "${SSH_CONFIGS[@]}"; do
  echo "Appending: $conf"
  cat "$conf" >> $TARGET
  echo "" >> $TARGET
done

# Update permissions
chmod 600 "$TARGET"

# Done
echo "Created: $TARGET"
exit 0
